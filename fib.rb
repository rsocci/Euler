# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

require_relative 'test_helper'

class Fibonacci
  attr_accessor :num

  def initialize(num)
    @num = num
  end

  def sum_of_even_numbers
    sum = 0
    first = second = 1

    while first < num
      second, first = first, second + first
      sum += second if second.even?
    end
    sum
  end
end

describe Fibonacci do
  context '#sum_of_even_numbers' do
    let (:fib) { Fibonacci.new(4000000) }
    it 'return 44' do
     fib.sum_of_even_numbers.must_equal 44
    end
  end
end
